{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/metadata.ts","webpack:///./src/index.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","metadata","version","envMode","gitHash","lastCompiled","__webpack_exports__","src_Fullscreen","Fullscreen","ele","this","tab","originListeners","wrappedListeners","fss","fullscreenEnabled","fullscreenElement","onfullscreenchange","onfullscreenerror","requestFullscreen","exitFullscreen","fullscreenchange","fullscreenerror","document","documentElement","doc","ownerDocument","length","cfs","Boolean","toggleFullscreen","generateWrappedListener","listener","_this","e","target","currentTarget","handleEvent","writable","configurable","getWrappedListener","pop","indexOf","wrappedListener","push","splice","addListener","type","options","addEventListener","removeListener","removeEventListener"],"mappings":"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","file":"fullscreen.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","interface ProjectMetadata {\r\n    name: string;\r\n    version: string;\r\n    envMode: \"none\" | \"development\" | \"production\";\r\n    gitHash: string;\r\n    lastCompiled: string;\r\n}\r\n\r\n// @ts-ignore (from webpack.DefinePlugin)\r\nexport const metadata: ProjectMetadata = __X_METADATA__;\r\n","declare global {\r\n    interface Document {\r\n        readonly webkitFullscreenEnabled: Document[\"fullscreenEnabled\"];\r\n        readonly mozFullScreenEnabled: Document[\"fullscreenEnabled\"];\r\n        readonly msFullscreenEnabled: Document[\"fullscreenEnabled\"];\r\n        readonly webkitFullscreenElement: Document[\"fullscreenElement\"];\r\n        readonly mozFullScreenElement: Document[\"fullscreenElement\"];\r\n        readonly msFullscreenElement: Document[\"fullscreenElement\"];\r\n        onwebkitfullscreenchange: Document[\"onfullscreenchange\"];\r\n        onmozfullscreenchange: Document[\"onfullscreenchange\"];\r\n        onmsfullscreenchange: Document[\"onfullscreenchange\"];\r\n        onwebkitfullscreenerror: Document[\"onfullscreenerror\"];\r\n        onmozfullscreenerror: Document[\"onfullscreenerror\"];\r\n        onmsfullscreenerror: Document[\"onfullscreenerror\"];\r\n        webkitExitFullscreen(): void;\r\n        mozCancelFullScreen(): void;\r\n        msExitFullscreen(): void;\r\n    }\r\n    interface Element {\r\n        webkitRequestFullscreen(): void;\r\n        mozRequestFullScreen(): void;\r\n        msRequestFullscreen(): void;\r\n    }\r\n}\r\n\r\nimport { metadata } from \"./metadata\";\r\n\r\nexport interface FullscreenAPIMapping {\r\n    fullscreenEnabled: \"fullscreenEnabled\" | \"webkitFullscreenEnabled\" | \"mozFullScreenEnabled\" | \"msFullscreenEnabled\";\r\n    fullscreenElement: \"fullscreenElement\" | \"webkitFullscreenElement\" | \"mozFullScreenElement\" | \"msFullscreenElement\";\r\n    onfullscreenchange:\r\n        | \"onfullscreenchange\"\r\n        | \"onwebkitfullscreenchange\"\r\n        | \"onmozfullscreenchange\"\r\n        | \"onmsfullscreenchange\";\r\n    onfullscreenerror: \"onfullscreenerror\" | \"onwebkitfullscreenerror\" | \"onmozfullscreenerror\" | \"onmsfullscreenerror\";\r\n    requestFullscreen: \"requestFullscreen\" | \"webkitRequestFullscreen\" | \"mozRequestFullScreen\" | \"msRequestFullscreen\";\r\n    exitFullscreen: \"exitFullscreen\" | \"webkitExitFullscreen\" | \"mozCancelFullScreen\" | \"msExitFullscreen\";\r\n    fullscreenchange: \"fullscreenchange\" | \"webkitfullscreenchange\" | \"mozfullscreenchange\" | \"MSFullscreenChange\";\r\n    fullscreenerror: \"fullscreenerror\" | \"webkitfullscreenerror\" | \"mozfullscreenerror\" | \"MSFullscreenError\";\r\n}\r\n\r\nexport type FullscreenEventType = \"fullscreenchange\" | \"fullscreenerror\";\r\n\r\nexport class Fullscreen {\r\n    private readonly ele: Element;\r\n    private readonly doc: Document;\r\n    private readonly tab: number = -1;\r\n    private readonly cfs: FullscreenAPIMapping | null;\r\n    private readonly originListeners: EventListenerOrEventListenerObject[] = [];\r\n    private readonly wrappedListeners: EventListenerOrEventListenerObject[] = [];\r\n    private readonly fss = [\r\n        {\r\n            fullscreenEnabled: \"fullscreenEnabled\",\r\n            fullscreenElement: \"fullscreenElement\",\r\n            onfullscreenchange: \"onfullscreenchange\",\r\n            onfullscreenerror: \"onfullscreenerror\",\r\n            requestFullscreen: \"requestFullscreen\",\r\n            exitFullscreen: \"exitFullscreen\",\r\n            fullscreenchange: \"fullscreenchange\",\r\n            fullscreenerror: \"fullscreenerror\"\r\n        },\r\n        {\r\n            fullscreenEnabled: \"webkitFullscreenEnabled\",\r\n            fullscreenElement: \"webkitFullscreenElement\",\r\n            onfullscreenchange: \"onwebkitfullscreenchange\",\r\n            onfullscreenerror: \"onwebkitfullscreenerror\",\r\n            requestFullscreen: \"webkitRequestFullscreen\",\r\n            exitFullscreen: \"webkitExitFullscreen\",\r\n            fullscreenchange: \"webkitfullscreenchange\",\r\n            fullscreenerror: \"webkitfullscreenerror\"\r\n        },\r\n        {\r\n            fullscreenEnabled: \"mozFullScreenEnabled\",\r\n            fullscreenElement: \"mozFullScreenElement\",\r\n            onfullscreenchange: \"onmozfullscreenchange\",\r\n            onfullscreenerror: \"onmozfullscreenerror\",\r\n            requestFullscreen: \"mozRequestFullScreen\",\r\n            exitFullscreen: \"mozCancelFullScreen\",\r\n            fullscreenchange: \"mozfullscreenchange\",\r\n            fullscreenerror: \"mozfullscreenerror\"\r\n        },\r\n        {\r\n            fullscreenEnabled: \"msFullscreenEnabled\",\r\n            fullscreenElement: \"msFullscreenElement\",\r\n            onfullscreenchange: \"onmsfullscreenchange\",\r\n            onfullscreenerror: \"onmsfullscreenerror\",\r\n            requestFullscreen: \"msRequestFullscreen\",\r\n            exitFullscreen: \"msExitFullscreen\",\r\n            fullscreenchange: \"MSFullscreenChange\",\r\n            fullscreenerror: \"MSFullscreenError\"\r\n        }\r\n    ];\r\n\r\n    constructor(ele?: Element) {\r\n        this.ele = ele || document.documentElement;\r\n        this.doc = this.ele.ownerDocument;\r\n        for (let i = 0; i < this.fss.length; i++) {\r\n            if (this.fss[i].fullscreenEnabled in this.doc) {\r\n                this.tab = i;\r\n                break;\r\n            }\r\n        }\r\n        this.cfs = <FullscreenAPIMapping>this.fss[this.tab] || null;\r\n    }\r\n\r\n    static get metadata() {\r\n        return metadata;\r\n    }\r\n\r\n    get fullscreenEnabled(): boolean {\r\n        if (this.cfs) {\r\n            return Boolean(this.doc[this.cfs.fullscreenEnabled]);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    get fullscreenElement(): Element | null {\r\n        if (this.cfs) {\r\n            return this.doc[this.cfs.fullscreenElement] || null;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    requestFullscreen(): Promise<void> | void {\r\n        if (this.cfs) {\r\n            return this.ele[this.cfs.requestFullscreen]();\r\n        }\r\n    }\r\n\r\n    exitFullscreen(): void {\r\n        if (this.cfs) {\r\n            if (this.fullscreenElement === this.ele) {\r\n                this.doc[this.cfs.exitFullscreen]();\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleFullscreen(): void {\r\n        if (this.fullscreenElement === this.ele) {\r\n            this.exitFullscreen();\r\n        } else {\r\n            this.requestFullscreen();\r\n        }\r\n    }\r\n\r\n    private generateWrappedListener(listener: EventListenerOrEventListenerObject): EventListenerOrEventListenerObject {\r\n        if (typeof listener === \"function\") {\r\n            return (e: Event) => e.target === this.ele && listener.call(e.currentTarget, e);\r\n        } else {\r\n            return Object.create(listener, {\r\n                handleEvent: {\r\n                    writable: true,\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value: (e: Event) => e.target === this.ele && listener.handleEvent.call(listener, e)\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private getWrappedListener(\r\n        listener: EventListenerOrEventListenerObject,\r\n        pop: boolean = false\r\n    ): EventListenerOrEventListenerObject {\r\n        if (typeof listener === \"function\") {\r\n            // EventListener\r\n        } else {\r\n            if (listener && typeof listener.handleEvent === \"function\") {\r\n                // EventListenerObject\r\n            } else {\r\n                // Invalid\r\n                return listener;\r\n            }\r\n        }\r\n        const i = this.originListeners.indexOf(listener);\r\n        if (i === -1) {\r\n            const wrappedListener = this.generateWrappedListener(listener);\r\n            if (!pop) {\r\n                this.originListeners.push(listener);\r\n                this.wrappedListeners.push(wrappedListener);\r\n            }\r\n            return wrappedListener;\r\n        } else {\r\n            const wrappedListener = this.wrappedListeners[i];\r\n            if (pop) {\r\n                this.originListeners.splice(i, 1);\r\n                this.wrappedListeners.splice(i, 1);\r\n            }\r\n            return wrappedListener;\r\n        }\r\n    }\r\n\r\n    addListener(\r\n        type: FullscreenEventType,\r\n        listener: EventListenerOrEventListenerObject,\r\n        options?: boolean | AddEventListenerOptions\r\n    ) {\r\n        if (type === \"fullscreenchange\" || type === \"fullscreenerror\") {\r\n            if (this.cfs) {\r\n                this.doc.addEventListener(this.cfs[type], this.getWrappedListener(listener), options);\r\n            }\r\n        }\r\n    }\r\n\r\n    removeListener(\r\n        type: FullscreenEventType,\r\n        listener: EventListenerOrEventListenerObject,\r\n        options?: boolean | EventListenerOptions\r\n    ) {\r\n        if (type === \"fullscreenchange\" || type === \"fullscreenerror\") {\r\n            if (this.cfs) {\r\n                this.doc.removeEventListener(this.cfs[type], this.getWrappedListener(listener, true), options);\r\n            }\r\n        }\r\n    }\r\n\r\n    get fullscreenMapping(): FullscreenAPIMapping | null {\r\n        return this.cfs;\r\n    }\r\n\r\n    get currentElement(): Element {\r\n        return this.ele;\r\n    }\r\n}\r\n"],"sourceRoot":""}